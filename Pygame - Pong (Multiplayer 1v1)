
import pygame, sys, random
from pygame import display


def reset_ball():
    global ball_speed_x, ball_speed_y
    ball.x = screen_width/2 - 10
    ball.y = random.randint(10,100)
    ball_speed_x *= random.choice([-1, 1])
    ball_speed_y *= random.choice([-1, 1])

def point_won(winner):
    global cpu_point, player_point

    if winner == "cpu":
        cpu_point += 1
    if winner == "player":
        player_point += 1

    reset_ball()

def animate_cpu():
    cpu.y += cpu_speed

    if cpu.top <= 0:
        cpu.top = 0

    if cpu.bottom >= screen_height:
        cpu.bottom = screen_height


def animate_player():
    player.y += player_speed

    if player.top <= 0:
        player.top = 0

    if player.bottom >= screen_height:
        player.bottom = screen_height


def animate_ball():
    global ball_speed_y, ball_speed_x
    ball.x += ball_speed_x
    ball.y += ball_speed_y

    if ball.bottom >= screen_height or ball.top <= 0:
        ball_speed_y *= -1

    if ball.right >= screen_width:
        point_won("cpu")

    if ball.left <= 0:
        point_won("player")

    if ball.colliderect(player) or ball.colliderect(cpu):
        ball_speed_x *= -1


pygame.init()

# 1200 * 800 pixies
screen_width = 1280
screen_height = 800

screen = display.set_mode((screen_width, screen_height))
display.set_caption("Diu Lai Lo Mo! My Pong Game!")

# define how fast the game runs, fps
clock = pygame.time.Clock()

# create objects
cpu = pygame.Rect(0, 0, 20, 100)
cpu.centery = screen_height / 2

player = pygame.Rect(0, 0, 20, 100)
player.midright = (screen_width, screen_height / 2)

ball = pygame.Rect(0, 0, 30, 30)
ball.center = (screen_width / 2, screen_height / 2)

# ball speed setting
ball_speed_x = 6
ball_speed_y = 6
player_speed = 0
cpu_speed = 6

# point setting
cpu_point, player_point = 0, 0

score_font = pygame.font.Font(None, 100)

# gameplay system
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                player_speed = -6
            if event.key == pygame.K_DOWN:
                player_speed = 6
        if event.type == pygame.KEYUP:
            if event.key == pygame.K_UP:
                player_speed = 0
            if event.key == pygame.K_DOWN:
                player_speed = 0

        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_w:
                cpu_speed = -6
            if event.key == pygame.K_s:
                cpu_speed = 6
        if event.type == pygame.KEYUP:
            if event.key == pygame.K_w:
                cpu_speed = 0
            if event.key == pygame.K_s:
                cpu_speed = 0

    animate_ball()
    animate_player()
    animate_cpu()


    # Draw the game objects and position them.
    screen.fill('black')  # loop to fill the surface screen again, avoid a white tail of trace
    cpu_score_surface = score_font.render(str(cpu_point), True, "white")
    player_score_surface = score_font.render(str(player_point), True, "white")
    screen.blit(cpu_score_surface, (screen_width / 4, 20))
    screen.blit(player_score_surface, (3*screen_width / 4, 20))

    pygame.draw.aaline(screen, 'red', (screen_width / 2, 0), (screen_width / 2, screen_height))
    pygame.draw.ellipse(screen, 'white', ball)
    pygame.draw.rect(screen, 'white', cpu)
    pygame.draw.rect(screen, 'white', player)

    # Update the display
    pygame.display.update()
    clock.tick(60)
